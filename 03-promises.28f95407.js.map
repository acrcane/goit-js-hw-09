{"mappings":"AAMA,SAASA,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAS,CAACC,EAAKC,KACxBC,YAAW,KACLN,EAEFI,EAAI,C,SAACN,E,MAAUC,IAGfM,EAAI,C,SAACP,E,MAAUC,GAAO,GAEvBA,EAAM,G,EAjBM,CACfQ,KAAMC,SAASC,cAAc,WAGtBF,KAAKG,iBAAiB,UAkBjC,SAAiBC,GACbA,EAAKC,iBACL,MAAQb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAKK,OAAOC,SAC5C,IAAIC,EAAQC,OAAON,EAAMO,OAEzB,IAAI,IAAIC,EAAI,EAAGA,EAAIN,EAAOK,MAAOC,IAC7BxB,EAAcwB,EAAGH,GAChBI,MAAK,EAACxB,SAACA,EAAQC,MAAEA,MAAYwB,QAAQC,IAAI,qBAAqB1B,QAAeC,OAAW,IACxF0B,OAAM,EAAC3B,SAACA,EAAQC,MAAEA,MAAYwB,QAAQC,IAAI,oBAAoB1B,QAAeC,OAAW,IAEzFmB,GAASC,OAAOL,EAAKM,M","sources":["src/js/03-promises.js"],"sourcesContent":["const collection = {\n    form: document.querySelector('.form')\n}\n\ncollection.form.addEventListener('submit', subForm)\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise ((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        res({position, delay})\n      } else {\n        // Reject\n        rej({position, delay})\n      }\n    }, delay)\n  })\n}\n\n\nfunction subForm(elem){\n    elem.preventDefault()\n    const { delay, step, amount } = elem.target.elements;\n    let total = Number(delay.value)\n\n    for(let i = 1; i < amount.value; i++){\n        createPromise(i, total)\n        .then(({position, delay}) => {console.log(`Fulfilled promise ${position} in ${delay} ms`)})\n        .catch(({position, delay}) => {console.log(`Rejected promise ${position} in ${delay} ms`)});\n\n        total += Number(step.value)\n    }\n}"],"names":["$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","form","document","querySelector","addEventListener","elem","preventDefault","delay1","step","amount","target","elements","total","Number","value","i","then","console","log","catch"],"version":3,"file":"03-promises.28f95407.js.map"}